repos:
  - CentOS-Base.repo
  - CentOS-Extras.repo
  - CentOS-AppStream.repo

testing_tools:
  - stress-ng
  - fio
  - iperf3
  - python3-numpy #Used by fio-plot
  - smartmontools
  - hwloc-gui # used for numa topology mapping
  - nvme-cli # NVME cli tools

## DD Job Configuration
#
# Timeout for dd jobs.  Increase for production run
dd_jobs_timeout: 3600

# Number of times to loop dd to pre-condition disks
# For production runs should be ~5
#
dd_loop_count: 5

# For testing modify this to enable the DD to finish quicker
#
# For Testing
#
#dd_syntax: bs=1M count=100 oflag=direct
#
# For Production
#
dd_syntax: bs=1M oflag=direct
#


## Stress-ng Job Configuration
#
# Passing 0 to --io and --vm let's stress-ng decide the number of threads based on physical cpu 
#
# Below line is for test runs for production this should be run for a pro-longed period to ensure longer testing
stress_ng_opts: --cpu-method all --io 0 --vm 0 --timeout 60s --metrics-brief

#
#
# Production
# stress_ng_opts: --cpu-method all --io 0 --vm 0 --timeout 24h --metrics-brief
#


## FIO Job Configuration
#
#
# Configuration options to get a baseline performance of each disk
# Tests are done serially then in parallel.  This is to catch corner cases where bus bandwidth can become an issue
#
#
#fio_job_opts: 

# runtime of individual fio jobs.  Should be increased for production runs.
#
fio_single_job_runtime: 1200
fio_batch_job_runtime: 1200

# iodepth for individual fio jobs.  works in conjunction with num jobs below (ref: https://unix.stackexchange.com/questions/459045/what-exactly-is-iodepth-in-fio )
fio_single_job_iodepth: 64
fio_batch_job_iodepth: 64

# ramp up time for individial fio jobs, tweak based on expectations
fio_single_job_rampup: 60
fio_batch_job_rampup: 60

# no of jobs for individual fio jobs.  (ref: https://unix.stackexchange.com/questions/459045/what-exactly-is-iodepth-in-fio )
fio_single_job_nojobs: 1,2,4
fio_batch_job_nojobs: 1

# what fio runs to do (single run)
fio_single_job_what: "read write randrw randread randwrite" 
fio_batch_job_what: "read write randrw randread randwrite"

#Read/Write Mix
# Can add multiples to do more than one combination
fio_single_job_rwmix: 75
fio_batch_job_rwmix: 75

#Block Size (, for multiples)
fio_block_size: 4k


